//
//  ListOrdersWorkerTests.swift
//  CleanStore
//
//  Created by IDEAL YANG on 2018/12/17.
//  Copyright (c) 2018 IDEAL YANG. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanStore
import XCTest

class ListOrdersWorkerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListOrdersWorker!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupListOrdersWorker()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListOrdersWorker()
  {
    sut = ListOrdersWorker(ordersStore: OrdersMemStoreSpy())
  }
  
  // MARK: Test doubles
    class OrdersMemStoreSpy: OrdersMemStore
    {
        // MARK: Method call expectations
        var fetchedOrdersCalled = false
        
        // MARK: Spied methods
        
        override func fetchOrders(completionHandler: @escaping (_ orders: [Order]) -> Void)
        {
            fetchedOrdersCalled = true
            
            DispatchQueue.main.asyncAfter(deadline: .now() + 1.0) {
                completionHandler([])
            }
        }
    }
  
  // MARK: Tests
  
  func testSomething()
  {
    // Given
    
    // When
    
    // Then
  }
    
    func testFetchOrdersShouldReturnListOfOrders()
    {
        // Given
        let ordersMemStoreSpy = sut.ordersStore as! OrdersMemStoreSpy
        
        // When
        let exceptation = self.expectation(description: "Wait for fetched orders result")
        sut.fetchOrders { (orders: [Order]) -> Void in
            exceptation.fulfill()
        }
        
        // Then
        XCTAssert(ordersMemStoreSpy.fetchedOrdersCalled, "Calling fetchOrders() should ask the data store for a list of orders")
        
        waitForExpectations(timeout: 1.1) { (error) in
            XCTAssert(true, "Calling fetchOrders() should result in the completion handler being called with the fetched orders result")
        }
    }
    
}
