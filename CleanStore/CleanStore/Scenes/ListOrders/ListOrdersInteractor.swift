//
//  ListOrdersInteractor.swift
//  CleanStore
//
//  Created by IDEAL YANG on 2018/12/17.
//  Copyright (c) 2018 IDEAL YANG. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListOrdersBusinessLogic
{
  func doSomething(request: ListOrders.Something.Request)
    
    func fetchOrders(request: ListOrders.FetchOrders.Request)
}

protocol ListOrdersDataStore
{
  //var name: String { get set }
}

class ListOrdersInteractor: ListOrdersBusinessLogic, ListOrdersDataStore
{
    
  var presenter: ListOrdersPresentationLogic?
  var worker: ListOrdersWorker? = ListOrdersWorker(ordersStore: OrdersMemStore())
  
  // MARK: Do something
  
  func doSomething(request: ListOrders.Something.Request)
  {
    worker?.doSomeWork()
    
    let response = ListOrders.Something.Response()
    presenter?.presentSomething(response: response)
  }
    
    func fetchOrders(request: ListOrders.FetchOrders.Request) {
        worker?.fetchOrders(completionHandler: { (orders) in
            let response = ListOrders.FetchOrders.Response(orders: orders)
            self.presenter?.presentFetchedOrders(response: response)
        })
        
    }
}
